<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Study Tracker</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      text-align: center;
      padding: 30px;
      background: #f1faff;
      color: #333;
    }
    .mode {
      font-size: 24px;
      margin-bottom: 10px;
      color: #0066cc;
    }
    .time {
      font-size: 60px;
      margin: 10px 0 30px 0;
    }
    .buttons button {
      padding: 10px 20px;
      font-size: 18px;
      margin: 5px;
      cursor: pointer;
    }
    .log {
      margin-top: 30px;
      font-size: 16px;
      max-height: 150px;
      overflow-y: auto;
      background: #ffffff;
      padding: 15px;
      border: 1px solid #ccc;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
  </style>
</head>
<body>
  <h1>Pomodoro Study Tracker üçÖ</h1>
  <div class="mode" id="mode">Session: Focus</div>
  <div class="time" id="display">0 min 0 sec</div>

  <div class="buttons">
    <button onclick="startTimer()">Start</button>
    <button onclick="pauseTimer()">Pause</button>
    <button onclick="resetTimer()">Reset</button>
  </div>

  <h3>Daily Log</h3>
  <div class="log" id="log"></div>

  <script>
    let seconds = 0;
    let minutes = 0;
    let interval = null;
    let isBreak = false;

    const focusDuration = 25; // minutes
    const breakDuration = 5;
    const today = new Date().toISOString().slice(0, 10);
    const storedData = JSON.parse(localStorage.getItem("studyLog") || "{}");

    if (!storedData[today]) storedData[today] = { focus: 0, break: 0 };

    function updateDisplay() {
      document.getElementById("display").textContent = `${minutes} min ${seconds} sec`;
      document.getElementById("mode").textContent = isBreak ? "Session: Break" : "Session: Focus";
    }

    function startTimer() {
      if (!interval) {
        interval = setInterval(() => {
          seconds++;
          if (seconds >= 60) {
            minutes++;
            seconds = 0;
          }

          // Auto switch between focus and break
          if (!isBreak && minutes === focusDuration) {
            storedData[today].focus += focusDuration;
            switchMode(true);
          } else if (isBreak && minutes === breakDuration) {
            storedData[today].break += breakDuration;
            switchMode(false);
          }

          localStorage.setItem("studyLog", JSON.stringify(storedData));
          updateDisplay();
        }, 1000);
      }
    }

    function pauseTimer() {
      if (interval) {
        clearInterval(interval);
        interval = null;
      }
    }

    function resetTimer() {
      pauseTimer();
      seconds = 0;
      minutes = 0;
      updateDisplay();
    }

    function switchMode(toBreak) {
      pauseTimer();
      isBreak = toBreak;
      minutes = 0;
      seconds = 0;
      updateDisplay();
      startTimer();
    }

    function showLog() {
      const logDiv = document.getElementById("log");
      logDiv.innerHTML = "";
      const entries = Object.entries(storedData).sort();
      entries.forEach(([date, { focus, break: brk }]) => {
        logDiv.innerHTML += `<div>${date}: Focus ${focus} min, Break ${brk} min</div>`;
      });
    }

    updateDisplay();
    showLog();
  </script>
</body>
</html>
